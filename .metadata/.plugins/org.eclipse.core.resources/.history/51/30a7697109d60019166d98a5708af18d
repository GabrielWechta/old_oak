package com.harman.database;

import java.util.Collection;
import java.util.stream.Collectors;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.Userdetails.EmployeeDetails;

public class PdfUserDetails implements UserDetails {
    private Employee Employee;
    public PdfEmployeeDetails(Employee Employee) {
        this.Employee = Employee;
    }
    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        return Employee.getAuthorities().stream().map(authority -> new SimpleGrantedAuthority(authority.getName().toString())).collect(Collectors.toList());
    }
    public int getId() {
        return Employee.getId();
    }
    @Override
    public String getPassword() {
        return Employee.getPassword();
    }
    @Override
    public String getEmployeename() {
        return Employee.getEmployeename();
    }
    @Override
    public boolean isAccountNonExpired() {
        return true;
    }
    @Override
    public boolean isAccountNonLocked() {
        return true;
    }
    @Override
    public boolean isCredentialsNonExpired() {
        return true;
    }
    @Override
    public boolean isEnabled() {
        return true;
    }
    public Employee getEmployeeDetails() {
        return Employee;
    }
}