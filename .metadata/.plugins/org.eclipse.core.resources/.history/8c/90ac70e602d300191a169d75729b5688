package org.vaadin.spring.tutorial;

import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;

public class SecurityConfiguration {
	/**
	 * Require login to access internal pages and configure login form.
	 */
	@Override
	protected void configure(HttpSecurity http) throws Exception {
	    // Not using Spring CSRF here to be able to use plain HTML for the login page
	    http.csrf().disable() // 

	            // Register our CustomRequestCache that saves unauthorized access attempts, so
	            // the user is redirected after login.
	            .requestCache().requestCache(new CustomRequestCache()) // 

	            // Restrict access to our application.
	            .and().authorizeRequests()

	            // Allow all flow internal requests.
	            .requestMatchers(SecurityUtils::isFrameworkInternalRequest).permitAll() // 

	            // Allow all requests by logged in users.
	            .anyRequest().authenticated() // 

	            // Configure the login page.
	            .and().formLogin().loginPage(LOGIN_URL).permitAll() // 
	            .loginProcessingUrl(LOGIN_PROCESSING_URL) // 
	            .failureUrl(LOGIN_FAILURE_URL)

	            // Configure logout
	            .and().logout().logoutSuccessUrl(LOGOUT_SUCCESS_URL);
	}
	
	/**
	 * Allows access to static resources, bypassing Spring security.
	 */
	@Override
	public void configure(WebSecurity web) throws Exception {
	    web.ignoring().antMatchers(
	            // Vaadin Flow static resources // 
	            "/VAADIN/**",

	            // the standard favicon URI
	            "/favicon.ico",

	            // the robots exclusion standard
	            "/robots.txt",

	            // web application manifest // 
	            "/manifest.webmanifest",
	            "/sw.js",
	            "/offline-page.html",

	            // (development mode) static resources // 
	            "/frontend/**",

	            // (development mode) webjars // 
	            "/webjars/**",

	            // (production mode) static resources // 
	            "/frontend-es5/**", "/frontend-es6/**");
	}
}
